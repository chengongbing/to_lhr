{"ast":null,"code":"import request from \"@/utils/request\"; // 引入request模块\nimport * as echarts from 'echarts'; // 引入echarts\n\nexport default {\n  name: 'Auditors',\n  components: {},\n  created() {\n    this.loadChartData(); // 加载图表数据\n  },\n\n  methods: {\n    // 加载图表数据\n    loadChartData() {\n      request.get(\"/api/transactions/last7days\", {\n        params: {\n          pageNum: this.currentPage,\n          pageSize: this.pageSize,\n          search: this.search\n        }\n      }).then(res => {\n        console.log(res);\n        if (res.code === '0') {\n          // 数据格式假设为 { date: '2023-02-01', count: 10 }\n          const dates = res.data.map(item => item.date);\n          const counts = res.data.map(item => item.count);\n          this.updateChart(dates, counts); // 更新图表\n        }\n      }).catch(err => {\n        console.error(\"请求失败\", err);\n      });\n    },\n    // 更新图表数据\n    updateChart(dates, counts) {\n      const chartDom = document.getElementById('main');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        xAxis: {\n          type: 'category',\n          data: dates // 从后端获取的日期数据\n        },\n\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: counts,\n          // 从后端获取的交易量数据\n          type: 'line',\n          smooth: true\n        }]\n      };\n      myChart.setOption(option); // 设置ECharts的配置项\n    },\n\n    // 分页处理\n    handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.loadChartData(); // 分页改变时重新加载图表数据\n    },\n\n    handleCurrentChange(pageNum) {\n      this.pageNum = pageNum;\n      this.loadChartData(); // 分页改变时重新加载图表数据\n    },\n\n    // 新增处理\n    add() {\n      this.dialogVisible = true;\n      this.form = {};\n    },\n    save() {\n      this.form.password = \"123\";\n      this.form.workload = 0;\n      this.form.role = 0;\n      request.post(\"/auditors\", this.form).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"新增成功\"\n          });\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          });\n        }\n        this.dialogVisible = false;\n        this.loadChartData(); // 新增后重新加载图表数据\n      });\n    }\n  },\n\n  data() {\n    return {\n      search: \"\",\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      pageNum: 1,\n      dialogVisible: false,\n      form: {},\n      tableData: []\n    };\n  }\n};","map":{"version":3,"names":["request","echarts","name","components","created","loadChartData","methods","get","params","pageNum","currentPage","pageSize","search","then","res","console","log","code","dates","data","map","item","date","counts","count","updateChart","catch","err","error","chartDom","document","getElementById","myChart","init","option","xAxis","type","yAxis","series","smooth","setOption","handleSizeChange","handleCurrentChange","add","dialogVisible","form","save","password","workload","role","post","$message","message","msg","total","tableData"],"sources":["F:\\to_LHR\\springboot-vue-demo\\vue\\src\\views\\SecondHandStatistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <!-- 图表容器 -->\r\n    <div id=\"main\" style=\"width: 100%; height: 400px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";  // 引入request模块\r\nimport * as echarts from 'echarts';     // 引入echarts\r\n\r\nexport default {\r\n  name: 'Auditors',\r\n  components: {},\r\n  created() {\r\n    this.loadChartData();  // 加载图表数据\r\n  },\r\n  methods: {\r\n    // 加载图表数据\r\n    loadChartData() {\r\n      request.get(\"/api/transactions/last7days\", {\r\n        params: {\r\n          pageNum: this.currentPage,\r\n          pageSize: this.pageSize,\r\n          search: this.search\r\n        }\r\n      }).then(res => {\r\n        console.log(res);\r\n        if (res.code === '0') {\r\n          // 数据格式假设为 { date: '2023-02-01', count: 10 }\r\n          const dates = res.data.map(item => item.date);\r\n          const counts = res.data.map(item => item.count);\r\n          this.updateChart(dates, counts);  // 更新图表\r\n        }\r\n      }).catch(err => {\r\n        console.error(\"请求失败\", err);\r\n      });\r\n    },\r\n\r\n    // 更新图表数据\r\n    updateChart(dates, counts) {\r\n      const chartDom = document.getElementById('main');\r\n      const myChart = echarts.init(chartDom);\r\n      const option = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: dates,  // 从后端获取的日期数据\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n        },\r\n        series: [\r\n          {\r\n            data: counts,  // 从后端获取的交易量数据\r\n            type: 'line',\r\n            smooth: true,\r\n          },\r\n        ],\r\n      };\r\n      myChart.setOption(option);  // 设置ECharts的配置项\r\n    },\r\n\r\n    // 分页处理\r\n    handleSizeChange(pageSize) {\r\n      this.pageSize = pageSize;\r\n      this.loadChartData();  // 分页改变时重新加载图表数据\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.pageNum = pageNum;\r\n      this.loadChartData();  // 分页改变时重新加载图表数据\r\n    },\r\n\r\n    // 新增处理\r\n    add() {\r\n      this.dialogVisible = true;\r\n      this.form = {};\r\n    },\r\n    save() {\r\n      this.form.password = \"123\";\r\n      this.form.workload = 0;\r\n      this.form.role = 0;\r\n      request.post(\"/auditors\", this.form).then(res => {\r\n        if (res.code === '0') {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"新增成功\"\r\n          });\r\n        } else {\r\n          this.$message({\r\n            type: \"error\",\r\n            message: res.msg\r\n          });\r\n        }\r\n        this.dialogVisible = false;\r\n        this.loadChartData();  // 新增后重新加载图表数据\r\n      });\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      search: \"\",\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      pageNum: 1,\r\n      dialogVisible: false,\r\n      form: {},\r\n      tableData: [],\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n}\r\n\r\n#main {\r\n  width: 100%;\r\n  height: 400px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}