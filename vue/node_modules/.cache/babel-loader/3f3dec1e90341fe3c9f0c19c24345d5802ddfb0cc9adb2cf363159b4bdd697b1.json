{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-03a6fe80\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chart-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"main\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"400px\"\n  }\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 图表容器 \"), _hoisted_2]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","style","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2"],"sources":["F:\\to_LHR\\springboot-vue-demo\\vue\\src\\views\\SecondHandStatistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <!-- 图表容器 -->\r\n    <div id=\"main\" style=\"width: 100%; height: 400px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";  // 引入request模块\r\nimport * as echarts from 'echarts';     // 引入echarts\r\n\r\nexport default {\r\n  name: 'Auditors',\r\n  components: {},\r\n  created() {\r\n    this.loadChartData();  // 加载图表数据\r\n  },\r\n  methods: {\r\n    // 加载图表数据\r\n    loadChartData() {\r\n      request.get(\"/api/transactions/last7days\", {\r\n        params: {\r\n          pageNum: this.currentPage,\r\n          pageSize: this.pageSize,\r\n          search: this.search\r\n        }\r\n      }).then(res => {\r\n        console.log(res);\r\n        if (res.code === '0') {\r\n          // 数据格式假设为 { date: '2023-02-01', count: 10 }\r\n          const dates = res.data.map(item => item.date);\r\n          const counts = res.data.map(item => item.count);\r\n          this.updateChart(dates, counts);  // 更新图表\r\n        }\r\n      }).catch(err => {\r\n        console.error(\"请求失败\", err);\r\n      });\r\n    },\r\n\r\n    // 更新图表数据\r\n    updateChart(dates, counts) {\r\n      const chartDom = document.getElementById('main');\r\n      const myChart = echarts.init(chartDom);\r\n      const option = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: dates,  // 从后端获取的日期数据\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n        },\r\n        series: [\r\n          {\r\n            data: counts,  // 从后端获取的交易量数据\r\n            type: 'line',\r\n            smooth: true,\r\n          },\r\n        ],\r\n      };\r\n      myChart.setOption(option);  // 设置ECharts的配置项\r\n    },\r\n\r\n    // 分页处理\r\n    handleSizeChange(pageSize) {\r\n      this.pageSize = pageSize;\r\n      this.loadChartData();  // 分页改变时重新加载图表数据\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.pageNum = pageNum;\r\n      this.loadChartData();  // 分页改变时重新加载图表数据\r\n    },\r\n\r\n    // 新增处理\r\n    add() {\r\n      this.dialogVisible = true;\r\n      this.form = {};\r\n    },\r\n    save() {\r\n      this.form.password = \"123\";\r\n      this.form.workload = 0;\r\n      this.form.role = 0;\r\n      request.post(\"/auditors\", this.form).then(res => {\r\n        if (res.code === '0') {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"新增成功\"\r\n          });\r\n        } else {\r\n          this.$message({\r\n            type: \"error\",\r\n            message: res.msg\r\n          });\r\n        }\r\n        this.dialogVisible = false;\r\n        this.loadChartData();  // 新增后重新加载图表数据\r\n      });\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      search: \"\",\r\n      total: 0,\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      pageNum: 1,\r\n      dialogVisible: false,\r\n      form: {},\r\n      tableData: [],\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n}\r\n\r\n#main {\r\n  width: 100%;\r\n  height: 400px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;gEAE1BC,mBAAA,CAAyD;EAApDC,EAAE,EAAC,MAAM;EAACC,KAAmC,EAAnC;IAAA;IAAA;EAAA;;;;uBAFjBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,mBAAA,UAAa,EACbC,UAAyD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}