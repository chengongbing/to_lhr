{"ast":null,"code":"import request from \"@/utils/request\";\nimport * as XLSX from 'xlsx';\nexport default {\n  name: 'Auditors',\n  components: {},\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      request.get(\"/auditors\", {\n        params: {\n          pageNum: this.currentPage,\n          pageSize: this.pageSize,\n          search: this.search\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.data.records;\n        this.total = res.data.total;\n      });\n    },\n    handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.load();\n    },\n    handleCurrentChange(pageNum) {\n      this.pageNum = pageNum;\n      this.load();\n    },\n    // 新增\n    add() {\n      this.dialogVisible = true;\n      this.form = {};\n    },\n    exportExcel() {\n      const sheet = XLSX.utils.table_to_sheet(this.$refs.table.$el); // 将表格转换为工作表，需要修改引用名称\n\n      // 删除从第7列开始的所有列\n      for (let i = 0; i < sheet['!ref'].split(':')[1].replace(/[a-zA-Z]+/g, ''); i++) {\n        // 遍历行\n        for (let j = 6; j <= sheet['!ref'].split(':')[1].replace(/[0-9]+/g, ''); j++) {\n          // 遍历第7列及之后的所有列\n          delete sheet[XLSX.utils.encode_cell({\n            r: i,\n            c: j\n          })]; // 删除单元格\n        }\n      }\n\n      const workbook = XLSX.utils.book_new(); // 新建工作簿对象\n      XLSX.utils.book_append_sheet(workbook, sheet, 'Sheet1'); // 设置工作表名称并添加到工作簿\n      XLSX.writeFile(workbook, 'data.xlsx'); // 将工作簿写入文件并设置文件名\n    },\n\n    save() {\n      this.form.password = \"123\";\n      this.form.workload = 0;\n      this.form.role = 0;\n      request.post(\"/auditors\", this.form).then(res => {\n        console.log(res);\n        if (res.code == '0') {\n          this.$message({\n            type: \"success\",\n            message: \"新增成功\"\n          });\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          });\n        }\n        this.dialogVisible = false;\n        this.load();\n      });\n    }\n  },\n  data() {\n    return {\n      search: \"\",\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      pageNum: 1,\n      dialogVisible: false,\n      //弹窗\n      form: {},\n      //新增用户信息\n      tableData: []\n    };\n  }\n};","map":{"version":3,"names":["request","XLSX","name","components","created","load","methods","get","params","pageNum","currentPage","pageSize","search","then","res","console","log","tableData","data","records","total","handleSizeChange","handleCurrentChange","add","dialogVisible","form","exportExcel","sheet","utils","table_to_sheet","$refs","table","$el","i","split","replace","j","encode_cell","r","c","workbook","book_new","book_append_sheet","writeFile","save","password","workload","role","post","code","$message","type","message","msg"],"sources":["F:\\to_LHR\\springboot-vue-demo\\vue\\src\\views\\SecondHandStatistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <!-- 图表容器 -->\r\n    <div id=\"main\" style=\"width: 100%; height: 400px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script >\r\n\r\nimport request from \"@/utils/request\";\r\nimport * as XLSX from 'xlsx';\r\nexport default {\r\n  name: 'Auditors',\r\n  components: {\r\n\r\n  },\r\n  created(){\r\n    this.load()\r\n  },\r\n  methods:{\r\n    load(){\r\n      request.get(\"/auditors\",{\r\n        params: {\r\n          pageNum:this.currentPage,\r\n          pageSize:this.pageSize,\r\n          search:this.search\r\n        }\r\n      }).then(res => {\r\n        console.log(res)\r\n        this.tableData=res.data.records\r\n        this.total=res.data.total\r\n      })\r\n    },\r\n\r\n    handleSizeChange(pageSize){\r\n      this.pageSize=pageSize\r\n      this.load()\r\n    },\r\n    handleCurrentChange(pageNum){\r\n      this.pageNum=pageNum\r\n      this.load()\r\n    },\r\n    // 新增\r\n    add(){\r\n      this.dialogVisible=true\r\n      this.form={}\r\n    },\r\n    exportExcel() {\r\n      const sheet = XLSX.utils.table_to_sheet(this.$refs.table.$el) // 将表格转换为工作表，需要修改引用名称\r\n\r\n      // 删除从第7列开始的所有列\r\n      for (let i = 0; i < sheet['!ref'].split(':')[1].replace(/[a-zA-Z]+/g, ''); i++) { // 遍历行\r\n        for(let j = 6; j <= sheet['!ref'].split(':')[1].replace(/[0-9]+/g,''); j++){ // 遍历第7列及之后的所有列\r\n          delete sheet[XLSX.utils.encode_cell({r: i, c: j})] // 删除单元格\r\n        }\r\n      }\r\n\r\n      const workbook = XLSX.utils.book_new() // 新建工作簿对象\r\n      XLSX.utils.book_append_sheet(workbook, sheet, 'Sheet1') // 设置工作表名称并添加到工作簿\r\n      XLSX.writeFile(workbook, 'data.xlsx') // 将工作簿写入文件并设置文件名\r\n    },\r\n    save(){\r\n      this.form.password=\"123\"\r\n      this.form.workload=0\r\n      this.form.role=0\r\n\r\n      request.post(\"/auditors\",this.form).then(res => {\r\n        console.log(res)\r\n        if(res.code=='0'){\r\n          this.$message({\r\n            type:\"success\",\r\n            message:\"新增成功\"\r\n          })\r\n        }else {\r\n          this.$message({\r\n            type:\"error\",\r\n            message:res.msg\r\n          })\r\n        }\r\n        this.dialogVisible=false\r\n        this.load()\r\n      })\r\n    }\r\n\r\n  },\r\n  data(){\r\n    return {\r\n      search:\"\",\r\n      total:0,\r\n      currentPage:1,\r\n      pageSize:10,\r\n      pageNum:1,\r\n      dialogVisible:false,//弹窗\r\n      form:{},//新增用户信息\r\n      tableData:[]\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}