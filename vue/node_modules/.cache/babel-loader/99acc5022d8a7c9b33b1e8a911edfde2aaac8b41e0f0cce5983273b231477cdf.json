{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-03a6fe80\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chart-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"main\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"400px\"\n  }\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 图表容器 \"), _hoisted_2]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","style","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2"],"sources":["F:\\to_LHR\\springboot-vue-demo\\vue\\src\\views\\SecondHandStatistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <!-- 图表容器 -->\r\n    <div id=\"main\" style=\"width: 100%; height: 400px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ECharts',\r\n  data() {\r\n    return {\r\n      chartData: [],\r\n      dateLabels: [],\r\n      transactionCounts: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    // 获取后端接口的数据\r\n    async fetchData() {\r\n      try {\r\n        // 假设后端 API 返回格式为 { date: '2023-02-01', count: 10 }\r\n        const response = await axios.get('http://your-api-url/transactions/last7days');\r\n        const data = response.data; // 后端数据格式是[{ date: '2023-02-01', count: 10}, ...]\r\n\r\n        // 分类统计\r\n        this.dateLabels = data.map(item => item.date);\r\n        this.transactionCounts = data.map(item => item.count);\r\n\r\n        // 初始化图表\r\n        this.initChart();\r\n      } catch (error) {\r\n        console.error('Failed to fetch transaction data:', error);\r\n      }\r\n    },\r\n    // 初始化 ECharts 图表\r\n    initChart() {\r\n      const chartDom = document.getElementById('main');\r\n      const myChart = echarts.init(chartDom);\r\n      const option = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: this.dateLabels\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: this.transactionCounts,\r\n            type: 'line',\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n      myChart.setOption(option);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;gEAE1BC,mBAAA,CAAyD;EAApDC,EAAE,EAAC,MAAM;EAACC,KAAmC,EAAnC;IAAA;IAAA;EAAA;;;;uBAFjBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,mBAAA,UAAa,EACbC,UAAyD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}