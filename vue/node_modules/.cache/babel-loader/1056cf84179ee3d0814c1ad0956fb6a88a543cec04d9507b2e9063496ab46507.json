{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-26084dc2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"login-box\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"login-title\"\n}, \"欢迎登录\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", null, [_createVNode(_component_el_form, {\n    model: $data.form\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        \"prefix-icon\": \"Avatar\",\n        modelValue: $data.form.account,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.account = $event),\n        placeholder: \"请输入用户名\",\n        clearable: \"\",\n        style: _normalizeStyle({\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n          opacity: '.8'\n        })\n      }, null, 8 /* PROPS */, [\"modelValue\", \"style\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        \"prefix-icon\": \"Lock\",\n        modelValue: $data.form.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.password = $event),\n        placeholder: \"请输入密码\",\n        \"show-password\": \"\",\n        clearable: \"\",\n        style: _normalizeStyle({\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n          opacity: '.7'\n        })\n      }, null, 8 /* PROPS */, [\"modelValue\", \"style\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        class: \"login-btn\",\n        onClick: $options.login\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"登 录\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_el_form","model","$data","form","_component_el_form_item","_component_el_input","account","$event","placeholder","clearable","style","_normalizeStyle","backgroundColor","opacity","password","_component_el_button","onClick","$options","login"],"sources":["F:\\to_LHR\\springboot-vue-demo\\vue\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-box\">\r\n      <div class=\"login-title\">欢迎登录</div>\r\n      <div>\r\n        <el-form :model=\"form\">\r\n          <el-form-item>\r\n            <el-input prefix-icon=\"Avatar\" v-model=\"form.account\" placeholder=\"请输入用户名\" clearable :style=\"{ backgroundColor: 'rgba(255, 255, 255, 0.7)', opacity: '.8' }\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-input prefix-icon=\"Lock\" v-model=\"form.password\" placeholder=\"请输入密码\" show-password clearable :style=\"{ backgroundColor: 'rgba(255, 255, 255, 0.7)', opacity: '.7' }\" />\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button class=\"login-btn\" @click=\"login\">登 录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {ElForm, ElFormItem, ElInput, ElButton, ElMessage} from 'element-plus';\r\nimport {Avatar, Lock} from '@element-plus/icons-vue';\r\nimport request from '@/utils/request';\r\n\r\nexport default {\r\n  name: 'Login',\r\n  components: {\r\n    ElForm,\r\n    ElFormItem,\r\n    ElInput,\r\n    ElButton,\r\n    Avatar, // 导入 Avatar 图标组件\r\n    Lock,\r\n  },\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  setup() {\r\n    return {\r\n      Avatar,\r\n      Lock\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    login: function () {\r\n      request.post('auditors/login', this.form).then(res => {\r\n        if (res.code === '0') {\r\n          ElMessage.success('登录成功');\r\n          sessionStorage.clear()\r\n          sessionStorage.setItem(\"user\", JSON.stringify(res.data));\r\n          // console.log(sessionStorage.getItem(\"user\"))\r\n          if (res.data.role == 1)\r\n            this.$router.push('/notifications');\r\n          else\r\n            this.$router.push('/assistance');\r\n        } else {\r\n          ElMessage.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-image: url('../assets/Desert1.jpg');\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  overflow: hidden;\r\n}\r\n\r\n.login-box {\r\n  display: flex; /* 设置为 Flex 布局 */\r\n  flex-direction: column; /* 纵向排列 */\r\n  justify-content: center; /* 垂直居中 */\r\n  width: 400px;\r\n  margin: 0 auto; /* 水平居中 */\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n  background-color: rgba(89,100,116, 0.4); /* 使用 RGBA 值设置半透明的白色背景 */\r\n}\r\n\r\n.login-title {\r\n  color: #333;\r\n  font-size: 30px;\r\n  text-align: center;\r\n  margin-bottom: 30px; /* 自适应宽度并居中显示 */\r\n}\r\n\r\n.el-input__inner,\r\n.el-button {\r\n  height: 40px;\r\n  font-size: 16px;\r\n  border-radius: 20px;\r\n}\r\n\r\n.el-form-item__label {\r\n  color: #666;\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  background-color: #50afeb;\r\n  border-color: #50afeb;\r\n  color: #fff;\r\n  margin-top: 20px;\r\n}\r\n\r\n.login-btn:hover {\r\n  background-color: #4092c2;\r\n  border-color: #4092c2;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAAmC;EAA9BD,KAAK,EAAC;AAAa,GAAC,MAAI;;;;;;;uBAFjCE,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJF,mBAAA,CAgBM,OAhBNG,UAgBM,GAfJC,UAAmC,EACnCJ,mBAAA,CAYM,cAXJK,YAAA,CAUUC,kBAAA;IAVAC,KAAK,EAAEC,KAAA,CAAAC;EAAI;sBACnB,MAEe,CAFfJ,YAAA,CAEeK,uBAAA;wBADb,MAAwK,CAAxKL,YAAA,CAAwKM,mBAAA;QAA9J,aAAW,EAAC,QAAQ;oBAAUH,KAAA,CAAAC,IAAI,CAACG,OAAO;mEAAZJ,KAAA,CAAAC,IAAI,CAACG,OAAO,GAAAC,MAAA;QAAEC,WAAW,EAAC,QAAQ;QAACC,SAAS,EAAT,EAAS;QAAEC,KAAK,EAAAC,eAAA,CAAE;UAAAC,eAAA;UAAAC,OAAA;QAAA,CAA8D;;;QAE7Jd,YAAA,CAEeK,uBAAA;wBADb,MAA2K,CAA3KL,YAAA,CAA2KM,mBAAA;QAAjK,aAAW,EAAC,MAAM;oBAAUH,KAAA,CAAAC,IAAI,CAACW,QAAQ;mEAAbZ,KAAA,CAAAC,IAAI,CAACW,QAAQ,GAAAP,MAAA;QAAEC,WAAW,EAAC,OAAO;QAAC,eAAa,EAAb,EAAa;QAACC,SAAS,EAAT,EAAS;QAAEC,KAAK,EAAAC,eAAA,CAAE;UAAAC,eAAA;UAAAC,OAAA;QAAA,CAA8D;;;QAEzKd,YAAA,CAEeK,uBAAA;wBADb,MAA2D,CAA3DL,YAAA,CAA2DgB,oBAAA;QAAhDtB,KAAK,EAAC,WAAW;QAAEuB,OAAK,EAAEC,QAAA,CAAAC;;0BAAO,MAAG,C,iBAAH,KAAG,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}