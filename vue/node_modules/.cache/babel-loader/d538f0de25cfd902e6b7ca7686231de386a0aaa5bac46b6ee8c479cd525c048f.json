{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"main\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"400px\"\n  }\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 图表容器 \"), _hoisted_2]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","style","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2"],"sources":["F:\\to_LHR\\springboot-vue-demo\\vue\\src\\views\\SecondHandStatistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <!-- 图表容器 -->\r\n    <div id=\"main\" style=\"width: 100%; height: 400px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script >\r\n\r\nimport request from \"@/utils/request\";\r\nimport * as XLSX from 'xlsx';\r\nexport default {\r\n  name: 'Auditors',\r\n  components: {\r\n\r\n  },\r\n  created(){\r\n    this.load()\r\n  },\r\n  methods:{\r\n    load(){\r\n      request.get(\"/auditors\",{\r\n        params: {\r\n          pageNum:this.currentPage,\r\n          pageSize:this.pageSize,\r\n          search:this.search\r\n        }\r\n      }).then(res => {\r\n        console.log(res)\r\n        this.tableData=res.data.records\r\n        this.total=res.data.total\r\n      })\r\n    },\r\n\r\n    handleSizeChange(pageSize){\r\n      this.pageSize=pageSize\r\n      this.load()\r\n    },\r\n    handleCurrentChange(pageNum){\r\n      this.pageNum=pageNum\r\n      this.load()\r\n    },\r\n    // 新增\r\n    add(){\r\n      this.dialogVisible=true\r\n      this.form={}\r\n    },\r\n    exportExcel() {\r\n      const sheet = XLSX.utils.table_to_sheet(this.$refs.table.$el) // 将表格转换为工作表，需要修改引用名称\r\n\r\n      // 删除从第7列开始的所有列\r\n      for (let i = 0; i < sheet['!ref'].split(':')[1].replace(/[a-zA-Z]+/g, ''); i++) { // 遍历行\r\n        for(let j = 6; j <= sheet['!ref'].split(':')[1].replace(/[0-9]+/g,''); j++){ // 遍历第7列及之后的所有列\r\n          delete sheet[XLSX.utils.encode_cell({r: i, c: j})] // 删除单元格\r\n        }\r\n      }\r\n\r\n      const workbook = XLSX.utils.book_new() // 新建工作簿对象\r\n      XLSX.utils.book_append_sheet(workbook, sheet, 'Sheet1') // 设置工作表名称并添加到工作簿\r\n      XLSX.writeFile(workbook, 'data.xlsx') // 将工作簿写入文件并设置文件名\r\n    },\r\n    save(){\r\n      this.form.password=\"123\"\r\n      this.form.workload=0\r\n      this.form.role=0\r\n\r\n      request.post(\"/auditors\",this.form).then(res => {\r\n        console.log(res)\r\n        if(res.code=='0'){\r\n          this.$message({\r\n            type:\"success\",\r\n            message:\"新增成功\"\r\n          })\r\n        }else {\r\n          this.$message({\r\n            type:\"error\",\r\n            message:res.msg\r\n          })\r\n        }\r\n        this.dialogVisible=false\r\n        this.load()\r\n      })\r\n    }\r\n\r\n  },\r\n  data(){\r\n    return {\r\n      search:\"\",\r\n      total:0,\r\n      currentPage:1,\r\n      pageSize:10,\r\n      pageNum:1,\r\n      dialogVisible:false,//弹窗\r\n      form:{},//新增用户信息\r\n      tableData:[]\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;gCAE1BC,mBAAA,CAAyD;EAApDC,EAAE,EAAC,MAAM;EAACC,KAAmC,EAAnC;IAAA;IAAA;EAAA;;;;uBAFjBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,mBAAA,UAAa,EACbC,UAAyD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}